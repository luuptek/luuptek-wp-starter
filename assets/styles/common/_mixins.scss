// For each breakpoint, define the maximum width of the container in a media query
@mixin make-container-max-widths($max-widths: $container-max-widths, $breakpoints: $grid-breakpoints) {
  @each $breakpoint, $container-max-width in $max-widths {
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      max-width: $container-max-width;
    }
  }
}

@mixin placeholder($color: $gray) {
  ::-webkit-input-placeholder {
    color: $color;
    font-weight: 300;
  }
  ::-moz-placeholder {
    color: $color;
    font-weight: 300;
  }
  :-ms-input-placeholder {
    color: $color;
    font-weight: 300;
  }
}

@mixin image-replace() {
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden;
}

@mixin transition($args) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

@mixin rotate($degrees) {
  -webkit-transform: rotate($degrees);
  -moz-transform: rotate($degrees);
  -ms-transform: rotate($degrees);
  -o-transform: rotate($degrees);
  transform: rotate($degrees);
}

@mixin add-block-text-sizes() {

  .has-small-font-size {
    font-size: rem(14px);

    &.has-drop-cap {
      &:first-letter {
        color: $primary;
        font-size: rem(22px);
        padding: rem(8px);
      }
    }
  }

  .has-normal-font-size {
    font-size: rem(16px);

    &.has-drop-cap {
      &:first-letter {
        color: $primary;
        font-size: rem(32px);
        padding: rem(8px);
      }
    }
  }

  .has-medium-font-size {
    font-size: rem(22px);

    &.has-drop-cap {
      &:first-letter {
        color: $primary;
        font-size: rem(50px);
        padding: rem(8px);
      }
    }
  }

  .has-large-font-size {
    font-size: rem(32px);

    &.has-drop-cap {
      &:first-letter {
        color: $primary;
        font-size: rem(60px);
        padding: rem(8px);
      }
    }
  }

  .has-huge-font-size {
    font-size: rem(40px);

    &.has-drop-cap {
      &:first-letter {
        color: $primary;
        font-size: rem(80px);
        padding: rem(8px);
      }
    }

    @include media-breakpoint-up(lg) {
      font-size: rem(50px);
    }
  }
}

@mixin add-block-aligns() {
  .has-text-align-center {
    text-align: center;
  }

  .has-text-align-right {
    text-align: right;
  }

  .has-text-align-left {
    text-align: left;
  }
}

@mixin add-block-vertical-aligns() {
  .is-vertically-aligned-center, .are-vertically-aligned-center {
    align-items: center;
  }

  .is-vertically-aligned-top, .are-vertically-aligned-top {
    align-items: flex-start;
  }

  .is-vertically-aligned-bottom, .are-vertically-aligned-bottom {
    align-items: flex-end;
  }
}

@mixin make-heading($font-size: $h1-base-font-size, $margin-top: 0, $margin-bottom: 0) {
  font-size: rem($font-size);
  margin-top: $margin-top;
  margin-bottom: $margin-bottom;
  word-break: break-word;

  @include media-breakpoint-up(md) {
    font-size: rem($font-size * $heading-md-multiplier);
  }

  @include media-breakpoint-up(lg) {
    font-size: rem($font-size * $heading-md-multiplier);
  }

  @include media-breakpoint-up(xl) {
    font-size: rem($font-size * $heading-xl-multiplier);
  }
}

@mixin luuptek-create-container($max-width: $align-wide-container-width, $h-padding: 15px) {
  margin-left: auto;
  margin-right: auto;
  padding-left: $h-padding;
  padding-right: $h-padding;
  max-width: $max-width;
}

@mixin luuptek-create-breaking-word() {
  word-break: break-word;
  hyphens: auto;
}
